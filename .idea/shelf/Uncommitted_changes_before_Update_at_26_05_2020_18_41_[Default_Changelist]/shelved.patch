Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/encodings.xml	(date 1589031651756)
+++ .idea/encodings.xml	(date 1589031651756)
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/src/A01_Stack/Stack.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A01_Stack/TestStack.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A02_Queue/Queue.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A02_Queue/TestQueue.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A03_DoubleLinkedList/DoubleLinkedList.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A03_DoubleLinkedList/TestDoubleLinkedList.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A04_TraverseTree/Wort.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A04_TraverseTree/Wörterbuch.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A04_TraverseTree/WörterbuchCountWordsTest.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A04_TraverseTree/WörterbuchWordsPrefixTest.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A05_Breitensuche/BaseTree.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A05_Breitensuche/Breitensuche.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A05_Breitensuche/Node.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A06_Tiefensuche/Film.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A06_Tiefensuche/Tiefensuche.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A09_ZyklenTiefensuche/Zyklen.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A09_ZyklenTiefensuche/ZyklenTest.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A10_DijkstraPQShortestPath/DijkstraPQShortestPath.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A10_DijkstraPQShortestPath/FindWay.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A11_DijkstraDGShortestPath/DijkstraDGShortestPath.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A11_DijkstraDGShortestPath/FindWay.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A12_DijkstraLand/Dijkstra.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/A13_MergeSort/MergeSort.java" charset="windows-1252" />
+    <file url="file://$PROJECT_DIR$/src/basisAlgorithmen/FindWay.java" charset="windows-1252" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(date 1589031589588)
+++ .idea/vcs.xml	(date 1589031589588)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: src/A01_Stack/Stack.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package A01_Stack;\r\n\r\n\r\npublic class Stack<T>\r\n{\r\n\t private Node<T> first;\r\n\t private int counter;\r\n    /**\r\n     * Oberstes Element entfernen und zurückliefern.\r\n     * Existiert kein Element, wird eine Exception ausgelöst.\r\n     * @throws StackEmptyException \r\n     */\r\n    public T pop() throws StackEmptyException {\r\n\r\n        // Falls keine First Node vorhanden ist == Stack ist Leer\r\n        if(first == null){\r\n            throw new StackEmptyException();\r\n        }\r\n       // Oberste Element zwischen speichern\r\n        Node<T> result = first;\r\n        // Darunterliegende  Element auf First setzen\r\n        first = first.getNext();\r\n        counter--;\r\n        return  result.getData();\r\n    }\r\n    \r\n    /**\r\n     * Übergebenen T auf Stack (als oberstes Element) speichern.\r\n     * @param i data\r\n     */\r\n    public void push(T i) {\r\n        counter++;\r\n        // Neues Node Objekt erzeugen\r\n\r\n        Node<T> n = new Node(i);\r\n        // Falls Stack leer dann ist Node == Erstes Element im Stack\r\n        if(first ==  null){\r\n            first = n;\r\n        }\r\n        // Wenn Element vorhanden dann, aktuelles Element wird der Zeiger auf darunterliegendesw Element gesetzt.\r\n        else {\r\n            n.setNext(first);\r\n           // Aktuelles Element wird zum obersten Element !!! Happy Coding !!!\r\n            first = n;\r\n        }\r\n\r\n\r\n    }\r\n    \r\n    /**\r\n     * Liefert die Anzahl der Elemente im Stack\r\n     * @return\r\n     */\r\n    public int getCount() {\r\n    \treturn counter;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- src/A01_Stack/Stack.java	(revision 9529c5acd67d44e5111c99461b89838850f4c24c)
+++ src/A01_Stack/Stack.java	(date 1589031589561)
@@ -23,7 +23,7 @@
         counter--;
         return  result.getData();
     }
-    
+
     /**
      * Übergebenen T auf Stack (als oberstes Element) speichern.
      * @param i data
